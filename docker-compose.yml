services:
  nginx:
    image: nginx-v1:00.00
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx_container
    volumes:
      - frontend_build:/usr/share/nginx/html:ro  # React Build Serve
    ports:
      - "80:80"
    networks:
      - backendDb
    depends_on:
      - backend
      - frontend

  frontend:
    image: frontend-v1:00.00
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend_container
    volumes:
      - frontend_build:/vite-build  # React build output stored in volume
    environment:
      - VITE_API_URL=http://backend:8080/api
    networks:
      - backendDb

  mssql_db:
    image: mssql-v1:00.00
    build: ./mssql
    container_name: mssql_container
    ports:
      - "1433:1433"
    env_file:
      - ./.env
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Srk@2508
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - backendDb
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -C -Q 'SELECT 1'"]
      interval: 60s
      timeout: 30s
      retries: 5

  backend:
    image: backend-v1:00.00
    build: ./backend
    container_name: backend_container
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      - ConnectionStrings__GameProfileContext=Server=mssql_db,1433;Database=profile;User Id=sa;Password=Srk@2508;TrustServerCertificate=True;Encrypt=False;
    depends_on:
      mssql_db:
        condition: service_healthy
    networks:
      - backendDb

volumes:
  sqlserver_data:
  frontend_build:

networks:
  backendDb:
    driver: bridge
